- Luan
    . Responsavel
    . Estados
    . Endereco
- Juan
    . Asilo
    . Avaliacoes
    . Agenda
- Mario
    . Funcionario
    . Contato
    . FormacaoFuncionario
- Steicy
    . Idoso
    . Prontuario

------------------------------------------------------

CREATE TABLE IF NOT EXISTS `contato` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `tipo` varchar(15) NOT NULL,
    `telefone` varchar(11) NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `estado`(
    `id` INT (9) AUTO_INCREMENT NOT NULL,
    `sigla` VARCHAR (2) NOT NULL,
    `nome` VARCHAR (18) NOT NULL,
    PRIMARY KEY (`id`) 
);

CREATE TABLE IF NOT EXISTS `endereco`(
    `id` INT (9) AUTO_INCREMENT NOT NULL,
    `cidade` VARCHAR (28) NOT NULL,
    `logradouro` VARCHAR (50) NOT NULL,
    `numero` INT (5) NOT NULL,
    `cep` INT (9) NOT NULL,
    `bairro` VARCHAR (50) NOT NULL,
    `complemento` VARCHAR (50),
    `estadoId` INT (8) NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `idoso` (
    `id` int(9) AUTO_INCREMENT NOT NULL,  
    `dataNasc` datetime NOT NULL,  
    `cpf` varchar(11) NOT NULL,  
    `nome` varchar(45) NOT NULL,  
    `responsavelId` int (8) NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `asilo` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `razaoSocial` varchar(50) NOT NULL,
    `contatoId` int(9) NOT NULL,
    `cnpj`varchar(14) NOT NULL,
    `enderecoId` int(8)  NOT NULL,
    `responsavelId` int(8)  NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `responsavel`(
    `id` INT (9) AUTO_INCREMENT NOT NULL,
    `nome` VARCHAR (45) NOT NULL,
    `cpf` VARCHAR (11) NOT NULL,
    `email` VARCHAR (45) NOT NULL,
    `dataNasc` DATETIME NOT NULL,
    `contatoId` INT (8) NOT NULL,
    `idosoId` INT (8) NOT NULL,
    `enderecoId` INT (8) NOT NULL,
    `asiloId` INT (8) NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `funcionario` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `nome` varchar(45) NOT NULL,
    `cpf` varchar(11) NOT NULL,
    `email` varchar(45) NOT NULL,
    `dataNasc` datetime NOT NULL,
    `contatoId` int(8)  NOT NULL,
    `asiloId` int(8)  NOT NULL,
    `enderecoId` int(8)  NOT NULL,
    `formacaoId` int(8)  NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `formacaoFuncionario` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `tipoFormacao` varchar(50) NOT NULL,
    `coren` varchar(10) NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `prontuario` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `descricao` varchar(150) NOT NULL,
    `idosoId` int(8)  NOT NULL,
    `agendaId` int(8)  NOT NULL,
    PRIMARY KEY (`id`)
); 

CREATE TABLE IF NOT EXISTS `avaliacao` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `comentario` varchar(200),
    `nota` int(1) NOT NULL,
    `asiloId` int(8)  NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `agenda` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `data` date NOT NULL,
    `hora` time NOT NULL,
    `prontuarioId` int(8)  NOT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `login` (
    `id` int(9) AUTO_INCREMENT NOT NULL,
    `username` varchar(20) NOT NULL,
    `password` varchar(30) NOT NULL,
    `confirmPassword` varchar(30) NOT NULL,
    PRIMARY KEY (`id`)
);

ALTER TABLE agenda
ADD FOREIGN KEY (`prontuarioId`) REFERENCES prontuario(id) ON DELETE CASCADE;

ALTER TABLE asilo
ADD FOREIGN KEY (`contatoId`) REFERENCES contato(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`enderecoId`) REFERENCES endereco(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`responsavelId`) REFERENCES responsavel(id) ON DELETE CASCADE;

ALTER TABLE avaliacao
ADD FOREIGN KEY (`asiloId`) REFERENCES asilo(id) ON DELETE CASCADE;

ALTER TABLE endereco
ADD FOREIGN KEY (`estadoId`) REFERENCES estado(id) ON DELETE CASCADE;

ALTER TABLE funcionario
ADD FOREIGN KEY (`asiloId`) REFERENCES asilo(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`contatoId`) REFERENCES contato(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`enderecoId`) REFERENCES endereco(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`formacaoId`) REFERENCES formacaoFuncionario(id) ON DELETE CASCADE;

ALTER TABLE idoso
ADD FOREIGN KEY (`responsavelId`) REFERENCES responsavel(id) ON DELETE CASCADE;

ALTER TABLE prontuario
ADD FOREIGN KEY (`agendaId`) REFERENCES agenda(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`idosoId`) REFERENCES idoso(id) ON DELETE CASCADE;

ALTER TABLE responsavel
ADD FOREIGN KEY (`contatoId`) REFERENCES contato(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`idosoId`) REFERENCES idoso(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`enderecoId`) REFERENCES endereco(id) ON DELETE CASCADE,
ADD FOREIGN KEY (`asiloId`) REFERENCES asilo(id) ON DELETE CASCADE;